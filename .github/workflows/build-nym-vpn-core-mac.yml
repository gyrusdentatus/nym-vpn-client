name: build-nym-vpn-core-mac
on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/build-nym-vpn-core-mac.yml"
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  CARGO_TARGET: release
  WG_GO_LIB_PATH: ${{ github.workspace }}/build/lib/universal-apple-darwin
  WG_GO_LIB_NAME: wireguard-go_apple_universal
  UPLOAD_DIR_MAC: mac_artifacts

jobs:
  build-wireguard-go-mac:
    uses: ./.github/workflows/build-wireguard-go-mac.yml

  build-mac:
    needs: build-wireguard-go-mac
    runs-on: macos-15
    outputs:
      UPLOAD_DIR_MAC: ${{ env.UPLOAD_DIR_MAC }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: brndnmtthws/rust-action-rustup@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          targets: x86_64-apple-darwin aarch64-apple-darwin

      - name: Install Go toochain
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install swift-protobuf
        run: |
          brew install swift-protobuf
          brew install grpc-swift

      - name: Install cargo-get
        run: |
          cargo install --locked cargo-get || true

      - name: Update nym-vpn-apple to use latest core
        run: |
          ./scripts/update-nym-vpn-apple-to-latest-core.sh
          git status
          git diff || echo "No changes detected"
          git diff > mac-plist-changes.patch

      - name: Upload applied changes
        uses: actions/upload-artifact@v4
        with:
          name: mac-plist-changes.patch
          path: mac-plist-changes.patch
          retention-days: 3

      - name: Get workspace version
        id: workspace-version
        uses: nicolaiunrein/cargo-get@master
        with:
          subcommand: workspace.package.version --entry nym-vpn-core

      - name: Install cargo-edit
        run: cargo install --locked cargo-edit || true

      - name: Append timestamp if it's a dev version
        run: ./scripts/append-timestamp-to-version.sh nym-vpn-core/Cargo.toml ${{ steps.workspace-version.outputs.metadata }}

      - name: Download wireguard-go artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.WG_GO_LIB_NAME }}
          path: ${{ env.WG_GO_LIB_PATH }}

      - name: Build nym-vpn-core (native)
        working-directory: nym-vpn-core
        env:
          RUSTFLAGS: "-L ${{ env.WG_GO_LIB_PATH }}"
        run: |
          cargo build -p nym-vpnc -p nym-gateway-probe --${{ env.CARGO_TARGET }}
          ls -la target/release/ || true

      - name: Build nym-vpn-core (x86_64)
        working-directory: nym-vpn-core
        env:
          RUSTFLAGS: "-L ${{ env.WG_GO_LIB_PATH }}"
        run: |
          cargo build -p nym-vpnc --${{ env.CARGO_TARGET }} --target x86_64-apple-darwin
          ls -la target/x86_64-apple-darwin/release/ || true

      - name: Build nym-vpnd with extra flags (native)
        working-directory: nym-vpn-core
        env:
          RUSTFLAGS: "-L ${{ env.WG_GO_LIB_PATH }} -C link-arg=-all_load -C link-arg=-ObjC -C link-arg=-sectcreate -C link-arg=__TEXT -C link-arg=__info_plist -C link-arg=${{ github.workspace }}/nym-vpn-apple/Daemon/Info.plist -C link-arg=-sectcreate -C link-arg=__TEXT -C link-arg=__launchd_plist -C link-arg=${{ github.workspace }}/nym-vpn-apple/Daemon/Launchd.plist"
        run: |
          cargo build -p nym-vpnd --${{ env.CARGO_TARGET }}
          ls -la target/release/ || true

      - name: Build nym-vpnd with extra flags (x86_64)
        working-directory: nym-vpn-core
        env:
          RUSTFLAGS: "-L ${{ env.WG_GO_LIB_PATH }} -C link-arg=-all_load -C link-arg=-ObjC -C link-arg=-sectcreate -C link-arg=__TEXT -C link-arg=__info_plist -C link-arg=${{ github.workspace }}/nym-vpn-apple/Daemon/Info.plist -C link-arg=-sectcreate -C link-arg=__TEXT -C link-arg=__launchd_plist -C link-arg=${{ github.workspace }}/nym-vpn-apple/Daemon/Launchd.plist"
        run: |
          cargo build -p nym-vpnd --${{ env.CARGO_TARGET }} --target x86_64-apple-darwin
          ls -la target/x86_64-apple-darwin/release/ || true

      - name: Create universal binaries and prepare for upload
        env:
          SRC_NATIVE_BINARY: nym-vpn-core/target/${{ env.CARGO_TARGET }}/
          SRC_X86_64_BINARY: nym-vpn-core/target/x86_64-apple-darwin/${{ env.CARGO_TARGET }}/
        run: |
          mkdir -p ${{ env.UPLOAD_DIR_MAC }}
          lipo -create -output ${{ env.UPLOAD_DIR_MAC }}/nym-vpnc ${{ env.SRC_NATIVE_BINARY }}/nym-vpnc ${{ env.SRC_X86_64_BINARY }}/nym-vpnc
          lipo -create -output ${{ env.UPLOAD_DIR_MAC }}/nym-vpnd ${{ env.SRC_NATIVE_BINARY }}/nym-vpnd ${{ env.SRC_X86_64_BINARY }}/nym-vpnd
          #lipo -create -output ${{ env.UPLOAD_DIR_MAC }}/nym-gateway-probe ${{ env.SRC_NATIVE_BINARY }}/nym-gateway-probe ${{ env.SRC_X86_64_BINARY }}/nym-gateway-probe
          # Native only for nym-gateway-probe
          cp ${{ env.SRC_NATIVE_BINARY }}/nym-gateway-probe ${{ env.UPLOAD_DIR_MAC }}/nym-gateway-probe

      - name: Compile protobuf for swift (health)
        working-directory: proto/grpc
        run: |
          protoc --swift_out=. health.proto
          protoc --grpc-swift_out=. health.proto

      - name: Compile protobuf for swift (vpn)
        working-directory: proto/nym
        run: |
          protoc --swift_out=. vpn.proto account.proto
          protoc --grpc-swift_out=. vpn.proto account.proto

      - name: Upload generated protobuf files for swift
        uses: actions/upload-artifact@v4
        with:
          name: swift-proto-files
          path: |
            proto/nym/vpn.grpc.swift
            proto/nym/vpn.pb.swift
            proto/nym/account.grpc.swift
            proto/nym/account.pb.swift
            proto/grpc/health.grpc.swift
            proto/grpc/health.pb.swift
          retention-days: 3

      - name: Include generated proto files for swift in the bundled upload
        run: |
          mkdir -p ${{ env.UPLOAD_DIR_MAC }}/proto/nym
          mkdir -p ${{ env.UPLOAD_DIR_MAC }}/proto/grpc
          cp -v proto/nym/vpn.grpc.swift ${{ env.UPLOAD_DIR_MAC }}/proto/nym
          cp -v proto/nym/vpn.pb.swift ${{ env.UPLOAD_DIR_MAC }}/proto/nym
          #cp -v proto/nym/account.grpc.swift ${{ env.UPLOAD_DIR_MAC }}/proto/nym
          cp -v proto/nym/account.pb.swift ${{ env.UPLOAD_DIR_MAC }}/proto/nym
          cp -v proto/grpc/health.grpc.swift ${{ env.UPLOAD_DIR_MAC }}/proto/grpc
          cp -v proto/grpc/health.pb.swift ${{ env.UPLOAD_DIR_MAC }}/proto/grpc

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UPLOAD_DIR_MAC }}
          path: ${{ env.UPLOAD_DIR_MAC }}
          retention-days: 1

